Conclusion

In this paper, we have introduced a modification of Union-Find (UF) decoder [0] that selectively grows regions of clusters based on the concept of a potential matching weight. The modified decoder, dubbed the Union-Find Node-Suspension (UFNS) decoder, relies on an additional data structure to facilitate the calculation of the potential matching weight. We have proved analytically that the UFNS decoder has a worst-case time complexity of X. 

Through Monte Carlo simulations on various decoder types, we have found that the UFNS decoder improves upon the performance of the UF decoder for all tested physical error rates and system sizes. Unfortunately, there is no fixed error threshold due to the Parity Inversion effect, which affects the performance at larger lattice sizes. Nevertheless, the UFNS decoder manages to occupy a region in X space previously reserved to the Minimum Weight Perfect Matching (MWPM) decoder. For the low-error regime, the UFNS combines the advantages of high decoding rates of the MWPM decoder and low computation time of the UF decoder. Future work include finding a way around the Parity Inversion effect, and to test the decoder for other error types, such as erasure errors. 

Recent work that includes the Union-Find decoder focuses on bringing the decoder algorithm to the hardware level. Most notably, a scalable decoder micro-architecture has been proposed with a fully pipelined hardware implementation [0]. Related work has shown that a reduction in bandwidth is possible provided qubits with a low physical error rate [0]. Furthermore, another variant of the decoder, dubbed the Weighted Union-Find decoder, not to be confused with Weighted Growth, promises to increase the code threshold under circuit-level noise [0]. This application relies on adopting the decoder to a weighted graph. Every edge X may now have a different length value, and edges are not limited to the growth of half-edges per growth iteration. We believe that Union-Find Node-Suspension decoder and the Weighted Union-Find decoder are compatible. In the combined decoder, boundary edges in every node are grown with respect to their weights in the weighted graph. 

The Union-Find decoder manages to decode fast and scale almost-linearly with the input system size. However, these speed-ups come at the cost of a decreased decoding performance. With the Union-Find Node-Suspension decoder, we manage to find a middle ground between the two objectives; high decoding performance that runs in worst-case quasilinear time. For these reasons it may be a great candidate for physical applications in the near future.

\Figure[b!](topskip=0pt, botskip=0pt, midskip=0pt)tikzfigs/comp_lowerror_time.pdf{
  The mean computation time of the UFNS, bvUF and MWPM decoders in the low error regime for phenomenological noise for X of the same simulation as in X. In this regime, the UFNS computation times are very comparable to the bvUF decoder. The x-axis scales linearly with X. 


\Figure[htb](topskip=0pt, botskip=0pt, midskip=0pt)tikzfigs/threshold_comparison.pdf{
  Direct comparison of the performance of various decoders covered in this thesis. The data of the original Union-Find (UF) decoder is taken from its publication [0]. Using the same range of lattice sizes and error rates, we simulate and plot also for our implementation of the Union-Find decoder with Weighted Growth applied via bucket sort and acyclic vertex-trees maintained during growth, the DBUF decoder, the Union-Find Node-Suspension decoder (UFNS), and the Minimum-Weight Perfect Matching (MWPM) decoder.
